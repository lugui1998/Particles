!function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);throw(f=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",f}c=n[i]={exports:{}},e[i][0].call(c.exports,function(r){return o(e[i][1][r]||r)},c,c.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){class Particles{static Void=0;static Sand=1}const Names=[],Colors=(Names[Particles.Void]="Void",Names[Particles.Sand]="Sand",[]);Colors[Particles.Void]=[0,0,0],Colors[Particles.Sand]=[242,189,107],module.exports={Particles:Particles,Names:Names,Colors:Colors}},{}],2:[function(require,module,exports){const Tile=require("./Tile");require=require("./Particles/Particles").Particles;module.exports=class{width=0;height=0;tileGridSize=0;physicsStartTime=0;lastFramesTimes=[];sharedBuffer=null;tiles=[];mousePrevPos={};mousePos={x:0,y:0};mousePressed=!1;sandboxArea=null;grid=null;brushParticle=require.Sand;brushSize=1;canvas;pauseState=!1;constructor(sandboxArea,tileGridSize=[4,2]){this.width=sandboxArea.offsetWidth,this.height=sandboxArea.offsetHeight,this.tileGridSize=tileGridSize,this.sandboxArea=sandboxArea,this.sharedBuffer=new SharedArrayBuffer(this.width*this.height*2*4),this.grid=new Int16Array(this.sharedBuffer);var tileWidth=Math.ceil(this.width/this.tileGridSize[0]),tileHeight=Math.ceil(this.height/this.tileGridSize[1]);let tileIndex=0,x=0;do{let endX=x+tileWidth,y=0;do{let endY=y+tileHeight;endX>this.width&&(endX=this.width),endY>this.height&&(endY=this.height),console.log(`Creating tile at [${x} ${y}] to [${endX} ${endY}] size [${endX-x} ${endY-y}]`),this.canvas=document.createElement("canvas"),this.canvas.width=endX-x,this.canvas.height=endY-y,this.canvas.style.position="absolute",this.canvas.style.left=x+"px",this.canvas.style.top=y+"px",sandboxArea.appendChild(this.canvas),this.tiles.push(new Tile(tileIndex++,this.canvas,this.sharedBuffer,x,y,endX,endY,4,this.width,this.height)),y=endY}while(y<this.height);x=endX}while(x<this.width);this.sandboxArea.onmousemove=this.HandleOnMouseMove.bind(this),this.sandboxArea.onmousedown=this.HandleOnMouseDown.bind(this),this.sandboxArea.onmouseup=this.HandleOnMouseUp.bind(this),this.sandboxArea.onmouseenter=this.HandleOnMouseEnter.bind(this),this.sandboxArea.onmouseleave=this.HandleOnMouseLeave.bind(this)}HandleOnMouseMove(e){this.mousePrevPos=JSON.parse(JSON.stringify(this.mousePos)),this.mousePos={x:e.clientX,y:e.clientY},this.mousePressed&&this.brushStroke(this.mousePrevPos,this.mousePos)}HandleOnMouseDown(e){this.mousePressed=!0,this.brushStroke(this.mousePrevPos,this.mousePos)}HandleOnMouseUp(e){this.mousePressed=!1}HandleOnMouseEnter(e){this.mousePressed=0<e.buttons,this.mousePressed&&(this.mousePos={x:e.clientX,y:e.clientY},this.brushStroke(this.mousePos,this.mousePos))}HandleOnMouseLeave(e){this.mousePressed&&this.brushStroke(this.mousePos,{x:e.clientX,y:e.clientY}),this.mousePressed=!1}update(){this.mousePressed&&this.brushStroke(this.mousePrevPos,this.mousePos),this.mousePrevPos=JSON.parse(JSON.stringify(this.mousePos));let inUpdate=!1;for(const tile of this.tiles)inUpdate|=tile.inUpdate;if(!inUpdate&&!this.pauseState){var timeNow=performance.now(),lastFrameTime=timeNow-this.physicsStartTime;this.lastFramesTimes.push(lastFrameTime),10<this.lastFramesTimes.length&&this.lastFramesTimes.shift(),this.physicsStartTime=timeNow;for(const tile of this.tiles)tile.update()}}brushStroke(startPos,endPos){if(startPos.x===endPos.x&&startPos.y===endPos.y)this.paintPixels(this.getPixelsInRadius(endPos,this.brushSize));else{startPos=this.traceLine(startPos,endPos);this.brushSize<=0&&this.paintPixels(startPos);const effectedPixels=new Set;for(const pixel of startPos)for(const pixelInRadius of this.getPixelsInRadius(pixel,this.brushSize))effectedPixels.add(pixelInRadius);this.paintPixels(effectedPixels)}}paintPixels(effectedPixels){const pixelChunks=[];for(const pixel of effectedPixels){var index;pixel.x<0||pixel.x>=this.width||pixel.y<0||pixel.y>=this.height||(index=this.pixelCoordsToPixelIndex(pixel.x,pixel.y),this.grid[index]=this.brushParticle,index=this.pixelCoordsToTileIndex(pixel.x,pixel.y),pixelChunks[index]=pixelChunks[index]||[],pixelChunks[index].push([pixel.x,pixel.y]))}for(const tile of this.tiles)void 0!==pixelChunks[tile.tileIndex]&&tile.updatePixels(pixelChunks[tile.tileIndex])}traceLine(startPos,endPos){const points=[];var dx=endPos.x-startPos.x,endPos=endPos.y-startPos.y,steps=Math.max(Math.abs(dx),Math.abs(endPos)),xInc=dx/steps,yInc=endPos/steps;let x=startPos.x,y=startPos.y;for(let i=0;i<steps;i++)points.push({x:Math.floor(x),y:Math.floor(y)}),x+=xInc,y+=yInc;return points}getPixelsInRadius(pixel,radius){const pixels=[];for(let x=pixel.x-radius;x<=pixel.x+radius;x++)for(let y=pixel.y-radius;y<=pixel.y+radius;y++)Math.sqrt(Math.pow(x-pixel.x,2)+Math.pow(y-pixel.y,2))<=radius&&pixels.push({x:x,y:y});return pixels}getPixelsInSquare(pixel,radius){const pixels=[];for(let x=pixel.x-radius;x<=pixel.x+radius;x++)for(let y=pixel.y-radius;y<=pixel.y+radius;y++)pixels.push({x:x,y:y});return pixels}selectBrushParticle(){}getBrushSize(){return this.brushSize}setBrushSize(size){this.brushSize=10<size?10:size,this.brushSize=this.brushSize<0?0:this.brushSize}pixelCoordsToPixelIndex(x,y){return 4*(x+y*this.width)}pixelCoordsToTileIndex(x,y){return this.tiles.findIndex(tile=>tile.startX<=x&&tile.endX>=x&&tile.startY<=y&&tile.endY>=y)}getPhysicsFPS(){let sum=0;for(const time of this.lastFramesTimes)sum+=time;return 1e3/(sum/this.lastFramesTimes.length)}getPauseState(){return this.pauseState}togglePauseState(){this.pauseState=!this.pauseState}clear(){for(let i=0;i<this.grid.length;i++)this.grid[i]=0}terminate(){for(const tile of this.tiles)tile.terminate()}}},{"./Particles/Particles":1,"./Tile":3}],3:[function(require,module,exports){module.exports=class{inUpdate=!1;worker=null;tileIndex=-1;startX=0;startY=0;endX=0;endY=0;constructor(tileIndex,canvas,sharedBuffer,startX,startY,endX,endY,pixelDataSize,width,height){canvas=canvas.transferControlToOffscreen();this.tileIndex=tileIndex,this.startX=startX,this.startY=startY,this.endX=endX,this.endY=endY,this.worker=new Worker("pixelWorker.min.js"),this.worker.postMessage({type:"init",data:{canvas:canvas,sharedBuffer:sharedBuffer,startX:startX,startY:startY,endX:endX,endY:endY,pixelDataSize:pixelDataSize,screenWidth:width,screenHeight:height}},[canvas]),this.worker.onmessage=this.handleWorkerMessage.bind(this)}update(){this.inUpdate||(this.inUpdate=!0,this.worker.postMessage({type:"doPhysics"}))}handleWorkerMessage(e){var{type:e,data}=e.data;switch(e){case"debug":console.log(data);break;case"donePhysics":this.inUpdate=!1}}updatePixels(pixelArr){this.worker.postMessage({type:"updatePixels",data:pixelArr})}terminate(){this.worker.terminate()}}},{}],4:[function(require,module,exports){const Sandbox=require("./Sandbox"),sandboxArea=document.getElementById("sandboxArea"),coords=document.getElementById("coords"),fps=document.getElementById("fps"),pause=document.getElementById("pause"),brush=document.getElementById("brushTool"),brushMinus=document.getElementById("brushMinus"),brushPlus=document.getElementById("brushPlus"),clear=document.getElementById("clear");let lagWarning=!0,rows=(setTimeout(()=>{lagWarning=!1},5e3),sandboxArea.offsetHeight),columns=sandboxArea.offsetWidth;var require=Math.floor(columns/400),tilesHeight=Math.ceil(rows/1400);let sandbox=new Sandbox(sandboxArea,[require,tilesHeight]);window.addEventListener("resize",()=>{document.location.reload()}),pause.addEventListener("click",()=>{sandbox.togglePauseState()}),document.addEventListener("keydown",event=>{"Space"==event.code&&sandbox.togglePauseState()}),sandboxArea.addEventListener("wheel",event=>{event=sandbox.brushSize+event.deltaY/100*-1;sandbox.setBrushSize(event)}),brushMinus.addEventListener("click",()=>{var newBrushSize=sandbox.brushSize-1;sandbox.setBrushSize(newBrushSize)}),brushPlus.addEventListener("click",()=>{var newBrushSize=sandbox.brushSize+1;sandbox.setBrushSize(newBrushSize)}),clear.addEventListener("click",()=>{sandbox.clear()}),window.requestAnimationFrame(function update(){sandbox.update(),coords.textContent=sandbox.mousePos.x+" "+sandbox.mousePos.y,brush.textContent="Brush:"+sandbox.getBrushSize(),window.requestAnimationFrame(update)}),setInterval(async()=>{pause.textContent=sandbox.getPauseState()?"Play":"Pause",fps.textContent=""+(0==sandbox.getPauseState()?Math.floor(sandbox.getPhysicsFPS()):"00"),sandbox.getPhysicsFPS()<5&&!lagWarning&&(1e3<rows||1e3<columns)&&(lagWarning=!0,sandbox.mousePressed=!1,alert("Physics is lagging. Consider running on a smaller window."))},100)},{"./Sandbox":2}]},{},[4]);
