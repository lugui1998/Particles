!function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);throw(f=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",f}c=n[i]={exports:{}},e[i][0].call(c.exports,function(r){return o(e[i][1][r]||r)},c,c.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){class Particles{static Air=0;static Dust=1;static Stone=2;static Water=3;static Metal=4;static Rust=5;static Lava=6;static Void=7;static Fire=8;static Steam=9;static Steel=10;static Acid=11;static AcidVapor=12;static Clone=13;static Oil=14;static getId(name){return Particles[name]}static isFluid(id){return[Particles.Water,Particles.Lava,Particles.Steam,Particles.Acid,Particles.AcidVapor,Particles.Oil].includes(id)}static isHidden(id){return[Particles.Rust,Particles.Steam,Particles.AcidVapor].includes(id)}static isStatic(id){return[Particles.Air,Particles.Metal,Particles.Steel,Particles.Void,Particles.Clone].includes(id)}}const Names=[],Colors=(Names[Particles.Air]="Air",Names[Particles.Dust]="Dust",Names[Particles.Stone]="Stone",Names[Particles.Water]="Water",Names[Particles.Metal]="Metal",Names[Particles.Rust]="Rust",Names[Particles.Lava]="Lava",Names[Particles.Void]="Void",Names[Particles.Fire]="Fire",Names[Particles.Steam]="Steam",Names[Particles.Steel]="Steel",Names[Particles.Acid]="Acid",Names[Particles.AcidVapor]="Acid-Vapor",Names[Particles.Clone]="Clone",Names[Particles.Oil]="Oil",[]),Density=(Colors[Particles.Air]=[20,20,20],Colors[Particles.Dust]=[242,189,107],Colors[Particles.Stone]=[128,128,128],Colors[Particles.Water]=[64,64,255],Colors[Particles.Metal]=[64,64,64],Colors[Particles.Rust]=[121,79,58],Colors[Particles.Lava]=[255,102,51],Colors[Particles.Void]=[0,0,0],Colors[Particles.Fire]=[255,50,50],Colors[Particles.Steam]=[204,204,204],Colors[Particles.Steel]=[169,173,174],Colors[Particles.Acid]=[204,255,0],Colors[Particles.AcidVapor]=[120,120,0],Colors[Particles.Clone]=[144,112,16],Colors[Particles.Oil]=[128,48,32],[]),InitialState=(Density[Particles.Air]=.002,Density[Particles.Dust]=1.5,Density[Particles.Stone]=3,Density[Particles.Water]=1,Density[Particles.Metal]=4,Density[Particles.Rust]=Density[Particles.Dust],Density[Particles.Lava]=2.5,Density[Particles.Void]=9999999,Density[Particles.Fire]=0,Density[Particles.Steam]=.1,Density[Particles.Steel]=8*Density[Particles.Metal],Density[Particles.Acid]=1.1,Density[Particles.AcidVapor]=Density[Particles.Steam],Density[Particles.Clone]=Density[Particles.Void],Density[Particles.Oil]=Density[Particles.Water]/2,[]),Movements=(InitialState[Particles.Air]=[Particles.Air,0,0,0],InitialState[Particles.Dust]=[Particles.Dust,0,0,50],InitialState[Particles.Stone]=[Particles.Stone,0,0,0],InitialState[Particles.Water]=[Particles.Water,0,0,25],InitialState[Particles.Metal]=[Particles.Metal,0,0,0],InitialState[Particles.Rust]=[Particles.Rust,0,0,0],InitialState[Particles.Lava]=[Particles.Lava,0,0,200],InitialState[Particles.Void]=[Particles.Void,0,0,0],InitialState[Particles.Fire]=[Particles.Fire,0,0,0],InitialState[Particles.Steam]=[Particles.Steam,0,0,80],InitialState[Particles.Steel]=[Particles.Steel,0,0,0],InitialState[Particles.Acid]=[Particles.Acid,0,0,0],InitialState[Particles.AcidVapor]=[Particles.AcidVapor,0,0,80],InitialState[Particles.Clone]=[Particles.Clone,0,0,0],InitialState[Particles.Oil]=[Particles.Oil,0,0,0],[]);Movements[Particles.Air]=0,Movements[Particles.Dust]=3,Movements[Particles.Stone]=2,Movements[Particles.Water]=2,Movements[Particles.Metal]=0,Movements[Particles.Rust]=Movements[Particles.Dust],Movements[Particles.Lava]=Movements[Particles.Dust],Movements[Particles.Void]=0,Movements[Particles.Fire]=3,Movements[Particles.Steam]=3,Movements[Particles.Steel]=Movements[Particles.Metal],Movements[Particles.Acid]=Movements[Particles.Water],Movements[Particles.AcidVapor]=Movements[Particles.Steam],Movements[Particles.Clone]=Movements[Particles.Void],Movements[Particles.Oil]=2,module.exports={Particles:Particles,Names:Names,Colors:Colors,Density:Density,InitialState:InitialState,Movements:Movements}},{}],2:[function(require,module,exports){class Random{static int(min,max){return Math.floor(Math.random()*(max-min+1))+min}static getRandomRGB(){return[Random.int(0,255),Random.int(0,255),Random.int(0,255)]}static direction(){return.5<Math.random()?1:-1}static float(min,max){return Math.random()*(max-min)+min}static number(){return Math.random()}static string(size){let text="";var possible="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let i=0;i<size;i++)text+=possible.charAt(Math.floor(Math.random()*possible.length));return text}}module.exports=Random},{}],3:[function(require,module,exports){const{Colors,Particles,Density,InitialState}=require("./Particles/Particles"),Random=require("./Utils/Random");let pixelData,canvas,startX,startY,endX,endY,pixelDataSize,screenWidth,screenHeight,lineOrder=[],width,height,onPhysics=!1;function computeUpdateOrderRadomness(){for(let y=startY;y<endY;y++){lineOrder[y]=[];for(let x=startX;x<endX;x++)lineOrder[y].push(x);shuffleArray(lineOrder[y])}}function shuffleArray(array){for(let i=array.length-1;0<i;i--){var j=Math.floor(Random.number()*(i+1));[array[i],array[j]]=[array[j],array[i]]}}function render(){let imagedata=ctx.createImageData(width,height);for(let y=startY;y<endY;y++)for(let x=startX;x<endX;x++)try{var pixelIndex=coordsToIndex(x,y),imageIndex=4*(x-startX+(y-startY)*width),color=Colors[pixelData[pixelIndex]];imagedata.data[imageIndex]=color[0],imagedata.data[1+imageIndex]=color[1],imagedata.data[2+imageIndex]=color[2],imagedata.data[3+imageIndex]=255}catch(e){}ctx.putImageData(imagedata,0,0),onPhysics||computeUpdateOrderRadomness(),requestAnimationFrame(render)}function coordsToIndex(x,y){return(x+y*screenWidth)*pixelDataSize}function isInBounds(x,y){return 0<=x&&x<screenWidth&&0<=y&&y<screenHeight}function isEmpty(x,y,ignoreFire=!0){if(isInBounds(x,y))return x=coordsToIndex(x,y),pixelData[x]===Particles.Air||ignoreFire&&pixelData[x]===Particles.Fire}function shouldSink(index,targetIndex){if(Density[pixelData[index]]>Density[pixelData[targetIndex]])return targetIndex=(index=Math.pow(Density[pixelData[index]],2)-Math.pow(Density[pixelData[targetIndex]],2))/(1+index),Random.number()<targetIndex}function reactionDust(index,x,y){pixelData[index+3]=pixelData[index+3]<0?0:pixelData[index+3],pixelData[index+3]=100<pixelData[index+3]?100:pixelData[index+3];const adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent){var targetIndex=coordsToIndex(targetX,targetY);if(isInBounds(targetX,targetY)&&(pixelData[targetIndex]===Particles.Lava||pixelData[targetIndex]===Particles.Fire)&&Random.number()<.63)return pixelData[index]=Particles.Fire,[index,x,y]}if(pixelData[index+3]<=0){let count=0,i=0;var adjacentDust=[[x-1,y],[x+1,y],[x,y-1],[x-1,y-1],[x+1,y-1],[x,y+1],[x+1,y+1],[x-1,y+1]];do{const[targetX,targetY]=adjacentDust[i];if(isInBounds(targetX,targetY)){const targetIndex=coordsToIndex(targetX,targetY);pixelData[targetIndex]===Particles.Dust&&count++}else count++}while(++i<adjacentDust.length);if(4<=count)return[index,x,y];count<=3&&(pixelData[index+3]+=3)}var prevX=x,prevY=y,hasMoved=!1;if([index,x,y,hasMoved]=function(index,x,y,maxMoves){let hasMoved=!1,i=0;do{if(isEmpty(x,y+1)){var targetIndex=coordsToIndex(x,++y);movePixel(index,targetIndex),index=targetIndex,hasMoved=!0}else if(direction=Random.direction(),isEmpty(x+direction,y+1)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex,hasMoved=!0}else if(direction*=-1,isEmpty(x+direction,y+1)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex,hasMoved=!0}}while(++i<=maxMoves);return[index,x,y,hasMoved]}(index,x,y,3),hasMoved){pixelData[index+3]++;const adjacent=[[prevX-1,prevY],[prevX+1,prevY],[prevX,prevY-1]];for(let[targetX,targetY]of adjacent){var aboveIndex=coordsToIndex(targetX,targetY);isInBounds(x,y-1)&&pixelData[aboveIndex]===Particles.Dust&&pixelData[aboveIndex+3]++}}else pixelData[index+3]--;if(pixelData[index+3]<=0)return[index,x,y];if(Random.number()<.01){const direction=Random.direction();i=0;do{if(isEmpty(x+direction,y)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex}}while(++i<=1)}return[index,x,y]}function removePixel(index){for(let i=0;i<pixelDataSize;i++)pixelData[index+i]=InitialState[Particles.Air][i]}function movePixel(fromIndex,toIndex){for(let i=0;i<pixelDataSize;i++)pixelData[toIndex+i]=pixelData[fromIndex+i],pixelData[fromIndex+i]=InitialState[Particles.Air][i]}function setPixel(index,type){for(let i=0;i<pixelDataSize;i++)pixelData[index+i]=InitialState[type][i]}function swapPixel(index1,index2){var temp;for(let i=0;i<pixelDataSize;i++)temp=pixelData[index1+i],pixelData[index1+i]=pixelData[index2+i],pixelData[index2+i]=temp}function quickFluid(index,x,y,maxMoves){let hasMoved=!1,i=0;do{if(isEmpty(x,y+1)){var targetIndex=coordsToIndex(x,++y);movePixel(index,targetIndex),index=targetIndex,hasMoved=!0}else if(isEmpty(x+(direction=Random.direction()),y+1)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex,hasMoved=!0}else if(isEmpty(x+(direction*=-1),y+1)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex,hasMoved=!0}else if(isEmpty(x+(direction=Random.direction()),y)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex,hasMoved=!0}else if(isEmpty(x+(direction*=-1),y)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex,hasMoved=!0}}while(++i<=maxMoves);return[index,x,y,hasMoved]}onmessage=function(e){var message=e.data;switch(message.type){case"init":!function(data){pixelData=new Int16Array(data.sharedBuffer),canvas=data.canvas,startX=data.startX,startY=data.startY,endX=data.endX,endY=data.endY,width=endX-startX,height=endY-startY,pixelDataSize=data.pixelDataSize,screenWidth=data.screenWidth,screenHeight=data.screenHeight,computeUpdateOrderRadomness();for(let y=startY;y<endY;y++)for(let x=startX;x<endX;x+=4)lineOrder[y].push(x),setPixel(coordsToIndex(x,y),Particles.Air);ctx=canvas.getContext("2d",{alpha:!1}),postMessage({type:"initDone"}),requestAnimationFrame(render)}(message.data);break;case"doPhysics":!function(){onPhysics=!0;for(let y=endY-1;y>=startY;y--)for(var x of lineOrder[y])!function(x,y){let index=coordsToIndex(x,y);if(pixelData[index]!==Particles.Air)try{[index,x,y]=function(index,x,y){switch(pixelData[index]){case Particles.Dust:return reactionDust(index,x,y);case Particles.Stone:return function(index,x,y){if(100<pixelData[index+3])return pixelData[index]=Particles.Lava,[index,x,y];var adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent)if(isInBounds(targetX,targetY)){targetX=coordsToIndex(targetX,targetY);if((pixelData[targetX]===Particles.Lava||pixelData[targetX]===Particles.Fire)&&Random.number()<.1)return pixelData[index+3]++,[index,x,y]}let i=0,canMove=!0;do{if(isEmpty(x,y+1)){const targetIndex=coordsToIndex(x,++y);movePixel(index,targetIndex),index=targetIndex}else canMove=!1}while(++i<=3&&canMove);return[index,x,y]}(index,x,y);case Particles.Water:return function(index,x,y){if(100<=pixelData[index+3])return pixelData[index]=Particles.Steam,[index,x,y];[index,x,y]=quickFluid(index,x,y,3);var direction=Random.direction();i=0;do{var targetIndex;isEmpty(x+direction,y)&&(targetIndex=coordsToIndex(x+=direction,y),movePixel(index,targetIndex),index=targetIndex)}while(++i<=2);return[index,x,y]}(index,x,y);case Particles.Metal:return function(index,x,y){if(100<pixelData[index+3])return pixelData[index]=Particles.Lava,[index,x,y];var adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent)if(isInBounds(targetX,targetY)){targetX=coordsToIndex(targetX,targetY);if(pixelData[targetX]===Particles.Water){if(Random.number()<.01)return pixelData[index]=Particles.Rust,[index,x,y]}else if(pixelData[targetX]===Particles.Rust){if(Random.number()<.001)return pixelData[index]=Particles.Rust,[index,x,y]}else if(pixelData[targetX]===Particles.Lava&&Random.number()<.1)return pixelData[index+3]++,[index,x,y]}return[index,x,y]}(index,x,y);case Particles.Rust:return reactionDust(index,x,y);case Particles.Lava:return function(index,x,y){if(pixelData[index+3]<=50)return pixelData[index]=Particles.Stone,[index,x,y];var adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent)isInBounds(targetX,targetY)&&(targetX=coordsToIndex(targetX,targetY),pixelData[targetX]!==Particles.Water&&pixelData[targetX]!==Particles.Acid&&pixelData[targetX]!==Particles.Oil||(pixelData[targetX+3]+=20,pixelData[index+3]-=20));if([index,x,y]=quickFluid(index,x,y,3),Random.number()<.1){var direction=Random.direction();i=0;do{if(isEmpty(x+direction,y)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex}}while(++i<=1)}return[index,x,y]}(index,x,y);case Particles.Void:return function(index,x,y){var adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent){var targetIndex=coordsToIndex(targetX,targetY);isEmpty(targetX,targetY)||pixelData[targetIndex]===Particles.Void||removePixel(targetIndex)}return[index,x,y]}(index,x,y);case Particles.Fire:return function(index,x,y){if(.95<Random.number())return removePixel(index),[index,x,y];var adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent){targetX=coordsToIndex(targetX,targetY);if(pixelData[targetX]===Particles.Water||pixelData[targetX]===Particles.Acid||pixelData[targetX]===Particles.Stone)return removePixel(index),pixelData[targetX+3]+=10,[index,x,y]}let i=0,canMove=!0;do{var targetIndex;isInBounds(x,y-1)&&pixelData[coordsToIndex(x,y-1)]===Particles.Air&&(targetIndex=coordsToIndex(x,--y),movePixel(index,targetIndex),index=targetIndex)}while(++i<2&&canMove);adjacent=.5<Random.number()?1:-1;if(isEmpty(x+adjacent,y,!1)){const targetIndex=coordsToIndex(x+=adjacent,y);movePixel(index,targetIndex),index=targetIndex}else if(isEmpty(x-adjacent,y,!1)){const targetIndex=coordsToIndex(x-=adjacent,y);movePixel(index,targetIndex),index=targetIndex}else canMove=!1;return[index,x,y]}(index,x,y);case Particles.Steam:return function(index,x,y){Random.number()<.05&&pixelData[index+3]--;if(pixelData[index+3]<=50)return pixelData[index+3]<=0&&(pixelData[index+3]=0),pixelData[index]=Particles.Water,[index,x,y];var direction=.5<Random.number()?1:-1;i=0;do{var targetIndex;isEmpty(x+direction,y)&&(targetIndex=coordsToIndex(x+=direction,y),movePixel(index,targetIndex),index=targetIndex)}while(++i<1);if(Random.number()<.3&&isEmpty(x,y-1)){const targetIndex=coordsToIndex(x,--y);movePixel(index,targetIndex)}return[index,x,y]}(index,x,y);case Particles.Steel:return[index,x,y];case Particles.Acid:return function(index,x,y){if(80<=pixelData[index+3])return pixelData[index]=Particles.AcidVapor,[index,x,y];var adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent){var targetIndex=coordsToIndex(targetX,targetY);if(pixelData[targetIndex]!==Particles.Acid&&pixelData[targetIndex]!==Particles.AcidVapor&&pixelData[targetIndex]!==Particles.Void&&pixelData[targetIndex]!==Particles.Clone&&isInBounds(targetX,targetY)&&!isEmpty(targetX,targetY))return targetX=Math.pow(Density[pixelData[targetIndex]],2),targetY=targetX/(targetX+1),Random.number()>targetY&&(removePixel(targetIndex),removePixel(index)),[index,x,y]}[index,x,y]=quickFluid(index,x,y,3);var direction=Random.direction();i=0;do{if(isEmpty(x+direction,y)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex}}while(++i<=1);return[index,x,y]}(index,x,y);case Particles.AcidVapor:return function(index,x,y){Random.number()<.05&&pixelData[index+3]--;if(pixelData[index+3]<=10)return pixelData[index]=Particles.Acid,[index,x,y];var adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent){var targetIndex=coordsToIndex(targetX,targetY);if(pixelData[targetIndex]!==Particles.Acid&&pixelData[targetIndex]!==Particles.AcidVapor&&pixelData[targetIndex]!==Particles.Void&&pixelData[targetIndex]!==Particles.Clone&&isInBounds(targetX,targetY)&&!isEmpty(targetX,targetY))return targetX=Math.pow(Density[pixelData[targetIndex]],2),targetY=targetX/(targetX+1),Random.number()>targetY&&(removePixel(targetIndex),removePixel(index)),[index,x,y]}var direction=.5<Random.number()?1:-1;i=0;do{if(isEmpty(x+direction,y)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex}}while(++i<1);if(Random.number()<.3&&isEmpty(x,y-1)){const targetIndex=coordsToIndex(x,--y);movePixel(index,targetIndex)}return[index,x,y]}(index,x,y);case Particles.Clone:return function(index,x,y){var adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent){var targetIndex=coordsToIndex(targetX,targetY);if(pixelData[targetIndex]==Particles.Clone)pixelData[targetIndex+3]==Particles.Air&&pixelData[index+3]!=Particles.Air&&(pixelData[targetIndex+3]=pixelData[index+3]);else{if(pixelData[index+3]!==Particles.Air)break;if(isInBounds(targetX,targetY)&&pixelData[targetIndex]!==Particles.Air){pixelData[index+3]=pixelData[targetIndex];break}}}if(!pixelData[index+3]===Particles.Air||.05<Random.number())return[index,x,y];for(let[targetX,targetY]of adjacent){const targetIndex=coordsToIndex(targetX,targetY);if(isInBounds(targetX,targetY)&&isEmpty(targetX,targetY)){setPixel(targetIndex,pixelData[index+3]);break}}return[index,x,y]}(index,x,y);case Particles.Oil:return function(index,x,y){var adjacent=[[x-1,y],[x+1,y],[x,y-1],[x,y+1]];for(var[targetX,targetY]of adjacent)isInBounds(targetX,targetY)&&(targetX=coordsToIndex(targetX,targetY),pixelData[targetX]!==Particles.Fire&&pixelData[targetX]!==Particles.Lava||(pixelData[index+3]=300<=pixelData[index+3]?300:pixelData[index+3]+50));if(50<=pixelData[index+3]){shuffleArray(adjacent);let emmited=!1;for(let[targetX,targetY]of adjacent)if(isEmpty(targetX,targetY)){const targetIndex=coordsToIndex(targetX,targetY);setPixel(targetIndex,Particles.Fire),emmited=!0,Random.number()<.1&&setPixel(index,Particles.Fire);break}emmited||(pixelData[index+3]-=20)}if([index,x,y]=quickFluid(index,x,y,3),Random.number()<.1){var direction=Random.direction();i=0;do{if(isEmpty(x+direction,y)){const targetIndex=coordsToIndex(x+=direction,y);movePixel(index,targetIndex),index=targetIndex}}while(++i<=1)}return[index,x,y]}(index,x,y)}}(index,x,y),Particles.isStatic(pixelData[index])||([index,x,y]=function(index,x,y){var indexBellow=coordsToIndex(x,y+1);if(!isEmpty(x,y+1)&&Particles.isFluid(pixelData[indexBellow])&&shouldSink(index,indexBellow))return swapPixel(index,indexBellow),[indexBellow,x,++y];indexBellow=coordsToIndex(x,y-1);if(!isEmpty(indexBellow)&&Particles.isFluid(pixelData[indexBellow])&&shouldSink(indexBellow,index))return swapPixel(indexBellow,index),[index,x,--y];return[index,x,y]}(index,x,y)),!function(index,x,y){let i=0;for(;i<3;){var vectorX=pixelData[index+1],vectorY=pixelData[index+2];if(0===vectorX&&0===vectorY)break;let movementX=0,movementY=0;0<vectorX?movementX=1:vectorX<0&&(movementX=-1),0<vectorY?movementY=1:vectorY<0&&(movementY=-1);vectorX=x+movementX,vectorY=y+movementY;if(!isEmpty(vectorX,vectorY))break;pixelData[index+1]-=movementX,pixelData[index+2]-=movementY;vectorX=coordsToIndex(vectorX,vectorY);x+=movementX,y+=movementY,movePixel(index,vectorX),index=vectorX,i++}}(index,x,y)}catch(e){let errorStr=e.message+`
${x}-${y}-`+index;for(let i=0;i<pixelDataSize;i++)errorStr+=" "+pixelData[index+i];throw function(data){postMessage({type:"error",data:data})}(`An error occured. Please report the error message to the developer (include a save if possible):

`+errorStr),e}}(x,y);postMessage({type:"donePhysics"}),onPhysics=!1}();break;case"updatePixels":updatePixels(message.data)}}},{"./Particles/Particles":1,"./Utils/Random":2}]},{},[3]);
